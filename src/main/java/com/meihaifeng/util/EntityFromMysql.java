package com.meihaifeng.util;import org.apache.commons.httpclient.util.DateUtil;import org.apache.commons.logging.Log;import org.apache.commons.logging.LogFactory;import java.io.File;import java.io.FileWriter;import java.io.IOException;import java.io.PrintWriter;import java.sql.*;import java.util.*;import java.util.Date;/** * 浙江卓锐科技股份有限公司 * * @author meihf * @date 2016/11/16 * @description */public class EntityFromMysql {        private static Log log = LogFactory.getLog(EntityFromMysql.class);        private String packageOutPath = "com.drore.cloud.gis.entity";//指定实体生成所在包的路径        private String tablename = "";//表名        private String authorName = "";//作者名字        private String[] colnames; // 列名数组        private String[] colTypes; //列名类型数组        private int[] colSizes; //列名大小数组        private boolean f_util = false; // 是否需要导入包java.util.*        private boolean f_sql = true; // 是否需要导入包java.sql.*        //数据库连接        private static final String URL ="jdbc:mysql://114.55.88.11:3306/cloud-second_3dgis";        private static final String NAME = "root";        private static final String PASS = "droreMa123";        private static final String DRIVER ="com.mysql.jdbc.Driver";        /*         * 构造函数         */        public EntityFromMysql(String tablename, String authorName){            this.tablename = tablename;            this.authorName = authorName;            //创建连接            Connection con;            //查要生成实体类的表            String sql = "select * from " + tablename;            PreparedStatement pStemt = null;            try {                try {                    Class.forName(DRIVER);                } catch (ClassNotFoundException e1) {                    // TODO Auto-generated catch block                    e1.printStackTrace();                }                con = DriverManager.getConnection(URL,NAME,PASS);                pStemt = con.prepareStatement(sql);                ResultSetMetaData rsmd = pStemt.getMetaData();                int size = rsmd.getColumnCount();	//统计列                colnames = new String[size];                colTypes = new String[size];                colSizes = new int[size];                for (int i = 0; i < size; i++) {                    colnames[i] = rsmd.getColumnName(i + 1);                    colTypes[i] = rsmd.getColumnTypeName(i + 1);                    if(colTypes[i].equalsIgnoreCase("datetime")){                        f_util = false;                    }                    if(colTypes[i].equalsIgnoreCase("image") ){                        f_sql = true;                    }                    colSizes[i] = rsmd.getColumnDisplaySize(i + 1);                }                String content = parse(colnames,colTypes,colSizes);                try {                    File directory = new File("");                    //System.out.println("绝对路径："+directory.getAbsolutePath());                    //System.out.println("相对路径："+directory.getCanonicalPath());                    String path=this.getClass().getResource("").getPath();                    System.out.println(path);//                    System.out.println("/src/?/"+path.substring(path.lastIndexOf("/com/", path.length())) );//				String outputPath = directory.getAbsolutePath()+ "/src/"+path.substring(path.lastIndexOf("/com/", path.length()), path.length()) + initcap(tablename) + ".java";                    String outputPath = directory.getAbsolutePath()+ "/gis-manage/src/main/java/"+this.packageOutPath.replace(".", "/")+"/"+initcap(tablename) + ".java";                    FileWriter fw = new FileWriter(outputPath);                    PrintWriter pw = new PrintWriter(fw);                    pw.println(content);                    pw.flush();                    pw.close();                } catch (IOException e) {                    e.printStackTrace();                }            } catch (SQLException e) {                e.printStackTrace();            } finally{//			try {//				con.close();//			} catch (SQLException e) {//				// TODO Auto-generated catch block//				e.printStackTrace();//			}            }        }        /**         * 功能：生成实体类主体代码         * @return         */        private String parse(String[] colnames, String[] colTypes, int[] colSizes) {            StringBuffer sb = new StringBuffer();            sb.append("package " + this.packageOutPath + ";\r\n");            sb.append("import com.alibaba.fastjson.annotation.JSONField;\r\n");            sb.append("import java.io.Serializable;\r\n");            //判断是否导入工具包            if(f_util){                sb.append("import java.util.Date;\r\n");            }            if(f_sql){                sb.append("import java.sql.*;\r\n");            }            sb.append("\r\n");            //注释部分            sb.append("/**\r\n");            sb.append(" * 浙江卓锐科技股份有限公司\r\n");            sb.append(" * @author "+authorName+"\r\n");            sb.append(" * @date "+ DateUtil.formatDate(new Date(),"yyyy/MM/dd")+"\r\n");            sb.append(" * @description\r\n");            sb.append("*/ \r\n");            //实体部分            sb.append("public class " + initcap(tablename) + " implements Serializable {\r\n");            processAllAttrs(sb);//属性            processAllMethod(sb);//get set方法            sb.append("}\r\n");            //System.out.println(sb.toString());            return sb.toString();        }        /**         * 功能：生成所有属性         */        private void processAllAttrs(StringBuffer sb) {            for (int i = 0; i < colnames.length; i++) {                if (!(colnames[i].equals("datafrom")                        ||colnames[i].equals("sort")                        ||colnames[i].equals("modifier")                        ||colnames[i].equals("creator")                        ||colnames[i].equals("synch_status")                        ||colnames[i].equals("modified_time")                        ||colnames[i].equals("is_deleted"))){                    sb.append("\t@JSONField(name=\""+initcap(colnames[i])+"\")\r\n");                    sb.append("\tprivate " + sqlType2JavaType(colTypes[i]) + " " + colnames[i] + ";\r\n");                }            }        }        /**         * 功能：生成所有方法         */        private void processAllMethod(StringBuffer sb) {            for (int i = 0; i < colnames.length; i++) {                if (!(colnames[i].equals("datafrom")                        ||colnames[i].equals("sort")                        ||colnames[i].equals("modifier")                        ||colnames[i].equals("creator")                        ||colnames[i].equals("synch_status")                        ||colnames[i].equals("modified_time")                        ||colnames[i].equals("is_deleted"))){                    sb.append("\tpublic void set" + initcapGetAndSet(colnames[i]) + "(" + sqlType2JavaType(colTypes[i]) + " " +                            colnames[i] + "){\r\n");                    sb.append("\t\tthis." + colnames[i] + "=" + colnames[i] + ";\r\n");                    sb.append("\t}\r\n");                    sb.append("\tpublic " + sqlType2JavaType(colTypes[i]) + " get" + initcapGetAndSet(colnames[i]) + "(){\r\n");                    sb.append("\t\treturn " + colnames[i] + ";\r\n");                    sb.append("\t}\r\n");                }            }        }    private String initcapGetAndSet(String colname) {        char[] ch = colname.toCharArray();        if(ch[0] >= 'a' && ch[0] <= 'z'){            ch[0] = (char)(ch[0] - 32);        }        return new String(ch);    }    /**     * 功能：将输入字符串的首字母改成大写     * @return     */        private String initcap(String str) {            char[] ch = str.toCharArray();            if (str.contains("resource_second_second_3dgis_")){                ch = str.replace("resource_second_second_3dgis_","").toCharArray();                if(ch[0] >= 'a' && ch[0] <= 'z'){                    ch[0] = (char)(ch[0] - 32);                }                String str2 = initcap(new String(ch));                return str2;            }            else if (str.contains("_")){                int index = str.indexOf("_");                if(ch[index+1] >= 'a' && ch[index+1] <= 'z'){                    ch[index+1] = (char)(ch[index+1] - 32);                }                String str2 = new String(ch).substring(0,index+1).replace("_","")+new String(ch).substring(index+1);                String str3 = initcap(str2);                return str3;            }            return new String(ch);        }        /**         * 功能：获得列的数据类型         * @return         */        private String sqlType2JavaType(String sqlType) {            if(sqlType.equalsIgnoreCase("bit")){                return "boolean";            }else if(sqlType.equalsIgnoreCase("tinyint")){                return "byte";            }else if(sqlType.equalsIgnoreCase("smallint")){                return "short";            }else if(sqlType.equalsIgnoreCase("int")){                return "int";            }else if(sqlType.equalsIgnoreCase("bigint")){                return "long";            }else if(sqlType.equalsIgnoreCase("float")){                return "float";            }else if(sqlType.equalsIgnoreCase("decimal") || sqlType.equalsIgnoreCase("numeric")                    || sqlType.equalsIgnoreCase("real") || sqlType.equalsIgnoreCase("money")                    || sqlType.equalsIgnoreCase("smallmoney")){                return "double";            }else if(sqlType.equalsIgnoreCase("varchar") || sqlType.equalsIgnoreCase("char")                    || sqlType.equalsIgnoreCase("nvarchar") || sqlType.equalsIgnoreCase("nchar")                    || sqlType.equalsIgnoreCase("text")){                return "String";            }else if(sqlType.equalsIgnoreCase("datetime")){                return "Timestamp";            }else if(sqlType.equalsIgnoreCase("image")){                return "Blod";            }            return null;        }        /**         * 出口         * TODO         */        public static void main(String[] args) {            new EntityFromMysql("resource_second_second_3dgis_"+"label_info_config","meihf");        }    }